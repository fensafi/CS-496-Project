"""Updated student_id, advisor_id, and appointment references

Revision ID: a5fab9a93a73
Revises: 4fc9766ece2a
Create Date: 2025-03-19 12:54:22.379124

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a5fab9a93a73'
down_revision = '4fc9766ece2a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('advisors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('advisor_id', sa.String(length=9), nullable=False))
        batch_op.drop_constraint('advisors_faculty_id_key', type_='unique')
        batch_op.create_unique_constraint(None, ['advisor_id'])
        batch_op.drop_column('faculty_id')

    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.alter_column('student_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=9),
               existing_nullable=False)
        batch_op.alter_column('advisor_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=9),
               existing_nullable=False)
        batch_op.drop_constraint('appointments_student_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('appointments_advisor_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'students', ['student_id'], ['student_id'])
        batch_op.create_foreign_key(None, 'advisors', ['advisor_id'], ['advisor_id'])

    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.alter_column('student_id',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=9),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.alter_column('student_id',
               existing_type=sa.String(length=9),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)

    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('appointments_advisor_id_fkey', 'advisors', ['advisor_id'], ['id'])
        batch_op.create_foreign_key('appointments_student_id_fkey', 'students', ['student_id'], ['id'])
        batch_op.alter_column('advisor_id',
               existing_type=sa.String(length=9),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('student_id',
               existing_type=sa.String(length=9),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('advisors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('faculty_id', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('advisors_faculty_id_key', ['faculty_id'])
        batch_op.drop_column('advisor_id')

    # ### end Alembic commands ###
